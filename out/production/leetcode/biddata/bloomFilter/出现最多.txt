1.一个包含20亿个全是32位整数的大文件，在其中找到出现次数最多的数
内存限制：2G

    hash分流，将一个大文件分割成为多个小文件，可以保证相同的数字会进入同一个文件

    32位整数占4个字节，20亿个占80亿个字节，8G空间
    如果使用hash，key也占4个字节，则如果每个整数都不一样，会产生16G空间

    需要将大文件，分为8个hash槽，每个不超过2G空间

    每次加载一个文件，计算出最多的数，只保留最大的key和value，逐一计算后，比较算出最多的数


2.32位无符号整数0~40亿个数，计算出哪些数字没有出现过

    使用一个byte[],长度为0-42亿（整数范围0-4294967295），出现则在对应下标填充1，则为零的是没有出现过的

    使用42亿byte空间，42亿个字节

进阶：
限制只能使用10M内存，只需找到一个没有出现过的数即可

    10M = 10 * 1024 * 1024 byte
    如果存储整数，可以存 10 * 1024 * 1024 / 4
    则将40亿分为这么多份，每个位置存储应该在此区间范围内的个数
    遍历所有数字，最后哪个区间范围没有达到这个个数，就在这个区间内找到对应的值



3.一个100亿个url的大文件，每个url占64B，找出其中重复的url

    hash分流

4.0-42亿，找出出现两次 的数字
    使用byte数组，每两个位置表示出现的次数

    则i是否出现，可以查看2i和2i+1，如果为00，则未出现，01，则出现1次，10，出现2次，11，出现3次

 进阶：限制10M空间，找到中位数
    区间记录个数，找到第20亿个数出现在哪个区间


5.一致性hash


6.生成UUID，保证并发，保证不重复




